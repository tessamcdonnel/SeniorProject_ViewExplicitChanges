#setwd("/Users/Stephanie/Dropbox/IS Assessment Data Summer 2017/final files/High School")
setwd("/Users/bchance/Dropbox/ISI Assessment Data Summer 2017/final files/High School")
setwd("/Users/tessamcdonnel/Dropbox/IS Assessment Data Summer 2017/final files/High School")


### Loading in Libraries ###
library(ggplot2)
load(url("http://www.rossmanchance.com/iscam3/ISCAM.RData"))
library(lme4)


### Reading in the data set ###
newMergedBoth <- read.csv("High School 16.17Feb23.csv")

### Original Data summaries
dim(newMergedBoth) # 631 students, 415 variables
iscamsummary(newMergedBoth$new_ach_gain)  # mean = 0.294
hist(newMergedBoth$new_ach_gain)

table(newMergedBoth$InstructorName_Section_Semester)
length(unique(newMergedBoth$instructor.last.name)) # 24 instructors
length(unique(newMergedBoth$institution))  # 24 institutions
length(unique(newMergedBoth$InstructorName_Section_Semester)) # 37
table(newMergedBoth$instructor.last.name, newMergedBoth$institution)

## I looked through the excel file and I didn't see any instructors at 2 institutions so I don't know why there is one more institution than instructor


### Removing those who opted out or didn't complete the pre or post surveys ###
#newMergedBoth = newMergedBoth[newMergedBoth$Opt.out_pre==1 & !is.na(newMergedBoth$Opt.out_pre) &!is.na(newMergedBoth$new_pre_perc),]
#newMergedBoth = newMergedBoth[newMergedBoth$Opt.out_post==1 & !is.na(newMergedBoth$Opt.out_post) &!is.na(newMergedBoth$new_post_perc),]


# Only one instructor at each institution
table(newMergedBoth$instructor.last.name, newMergedBoth$institution)


#Double check empty institutions
table(newMergedBoth$institution)


### Summary stats 

iscamsummary(newMergedBoth$new_pre_perc)
iscamsummary(newMergedBoth$new_post_perc)
iscamsummary(newMergedBoth$gain)
iscamsummary(newMergedBoth$new_ach_gain)
#     n    Min       Q1  Median      Q3     Max    Mean      SD 
#   606  -0.733   0.136   0.314   0.500   1.000   0.300   0.271 

hist(newMergedBoth$new_ach_gain)

table(newMergedBoth$textbook.classification)

table(newMergedBoth$instructor.last.name)

table(newMergedBoth$textbook.classification, newMergedBoth$instructor.last.name)



## Achievable Gain by Textbook
iscamsummary(newMergedBoth$new_ach_gain, newMergedBoth$textbook.classification)


summary(aov(newMergedBoth$new_ach_gain ~ newMergedBoth$textbook.classification)) # p-val = 0.016
#                                     Df  Sum Sq   Mean Sq  F value Pr(>F)  
# newMergedBoth$textbook.classification   3   0.76    0.25282  3.475    0.0159 *
# Residuals                            602 43.80   0.07276       


## Boxplots ##

boxplot(new_ach_gain~textbook.classification, data=newMergedBoth, main="Achievable Gain by Text Type", xlab="Text", ylab="Achievable Gain")
#prep
newMerged_Box <- newMergedBoth[newMergedBoth$textbook.classification == "ISI" | newMergedBoth$textbook.classification == "ISIfirst" | newMergedBoth$textbook.classification == "notSBI" | newMergedBoth$textbook.classification == "notSBI2",]
newMerged_Box$textbook.classification <- factor(newMerged_Box$textbook.classification, levels = c("ISI", "ISIfirst","notSBI","notSBI2"))
#grouped by section
means <- tapply(newMerged_Box$new_ach_gain,newMerged_Box$textbook.classification,mean,na.rm=TRUE)
grand_mean <- mean(newMerged_Box$new_ach_gain,na.rm=TRUE)
ggplot(aes(y=new_ach_gain,x=textbook.classification,group=InstructorName_Section_Semester, 
           fill=textbook.classification),data=newMerged_Box) + geom_boxplot() + xlab("Section") + ylab("Achievable Gain") + ggtitle("Boxplots of Achievable Gains by Section and Textbook (2016-2017)") + theme_bw() + geom_segment(aes(x=.647,y=means[1],xend=1.355,yend=means[1]),  colour="deeppink4", size=1.3) +  geom_segment(aes(x=1.613,y=means[2],xend=2.355,yend=means[2]), colour="deeppink4", size=1.3) + geom_segment(aes(x=2.611,y=means[3],xend=3.363,yend=means[3]), colour="deeppink4", size=1.3) + geom_segment(aes(x=3.64,y=means[4],xend=4.389,yend=means[4]), colour="deeppink4", size=1.3) + geom_segment(aes(x=4.63,y=means[5],xend=5.37,yend=means[5]), colour="deeppink4", size=1.3) + geom_segment(aes(x=0,y=grand_mean,xend=6,yend=grand_mean),colour="navyblue",show.legend=FALSE)
#grouped by instructor
means2 <- tapply(newMergedBoth$new_ach_gain,newMergedBoth$textbook.classification,mean,na.rm=TRUE)
grand_mean2 <- mean(newMergedBoth$new_ach_gain,na.rm=TRUE)
ggplot(aes(y=new_ach_gain,x=textbook.classification,group=instructor.last.name, fill=textbook.classification),data=Merged_Box) + 
  geom_boxplot() + xlab("Textbook/Instructor") + ylab("Achievable Gain") + ggtitle("Boxplots of Achievable Gains by Instructor and Textbook (16-17)") + 
  theme_bw() + geom_segment(aes(x=.647,y=means[1],xend=1.355,yend=means[1]), colour="deeppink4", size=1.3) +  geom_segment(aes(x=1.613,y=means[2],xend=2.355,yend=means[2]), colour="deeppink4", size=1.3) + geom_segment(aes(x=2.611,y=means[3],xend=3.363,yend=means[3]), colour="deeppink4", size=1.3) + geom_segment(aes(x=3.64,y=means[4],xend=4.389,yend=means[4]), colour="deeppink4", size=1.3) + geom_segment(aes(x=4.63,y=means[5],xend=5.37,yend=means[5]), colour="deeppink4", size=1.3)  + geom_segment(aes(x=0,y=grand_mean,xend=6,yend=grand_mean),colour="navyblue",show.legend=FALSE)


# Achievable Gain by student gender

iscamsummary(newMergedBoth$new_ach_gain, newMergedBoth$gender)
# Sex  n   Min     Q1   Median    Q3   Max  Mean    SD
# F   320 -0.667 0.0988  0.279 0.468 0.864 0.269 0.258
# M   285 -0.733 0.1580  0.364 0.526 1.000 0.333 0.283

summary(aov(newMergedBoth$new_ach_gain ~ newMergedBoth$gender)) # Male students had significantly larger new_ach_gains (p-val = 0.0038)
boxplot(new_ach_gain~gender, data=newMergedBoth, main="Achievable Gain by Student Gender", xlab="Gender (Female=1, Male=2)", ylab="Achievable Gain")


# Achievable gain by pre-course GPA

regrline2 = lm(newMergedBoth$new_ach_gain ~ newMergedBoth$gpa_pre)
summary(regrline2)
plot(newMergedBoth$gpa_pre, newMergedBoth$new_ach_gain)
abline(regrline2)

#Regression Coefficients:
#                    Estimate Std. Error t value Pr(>|t|)    
# (Intercept)        -0.49853    0.14381  -3.467  0.00057 ***
# newMergedBoth$gpa_pre  0.21625    0.03863   5.599 3.47e-08 ***

cor.test(newMergedBoth$gpa_pre, newMergedBoth$new_ach_gain, method = "pearson", alternative = 'greater')
# Correlation coefficient = 0.237, p-val < 0.0001


# Achievable Gain by change in value

regrline = lm(newMergedBoth$new_ach_gain ~ newMergedBoth$Value_change)
summary(regrline)
plot(newMergedBoth$Value_change, newMergedBoth$new_ach_gain)
abline(regrline)
cor.test(newMergedBoth$Value_change, newMergedBoth$new_ach_gain, method = "pearson", alternative = 'greater')

# Achievable gain by test order

iscamsummary(newMergedBoth$new_ach_gain, newMergedBoth$Test.Order_post)
# Order            n    Min    Q1 Median  Q3   Max  Mean    SD
# Attitudes First  321 -0.733 0.136  0.294 0.5 1.000 0.293 0.275
# Concepts  First  285 -0.667 0.136  0.333 0.5 0.917 0.307 0.268

table(newMergedBoth$Test.Order_post)


# Achievable Gain by whether student took AP stats 

table(newMergedBoth$APstats) # Only 21 students took AP stats
iscamsummary(newMergedBoth$new_ach_gain, newMergedBoth$APstats) 
# AP    n    Min    Q1 Median    Q3  Max  Mean    SD
# Yes   21 -0.667 0.050  0.280 0.385 0.65 0.205 0.330
# No   559 -0.733 0.143  0.316 0.500 1.00 0.305 0.268
summary(aov(newMergedBoth$new_ach_gain ~ newMergedBoth$APstats)) 
boxplot(new_ach_gain~APstats, data=newMergedBoth, main="Achievable Gain by AP status", xlab="AP", ylab="Achievable Gain")

### Example of an HLM Model we have ran ###
# We did a manual backwards elimination by commenting out variables that were not significant
# This model might not run right now because some variable names have been changed since we ran this



model4 = lmer(new_ach_gain ~ 1   
              + new_pre_perc + Affect_pre
              + Cognitive.Competence_pre + Difficulty_pre 
              + Effort_pre 
              #+ Interest_pre 
              #+ Value_pre
              + Affect_post
              + Cognitive.Competence_post 
              #+ Difficulty_post 
              #+ Effort_post 
              #+ Interest_post
              #+ Value_post
              + gender_pre 
              + age_pre
              + gpa_pre + SATACTzscore
              + instructor.gender
              #  + class.size.start
              #  + isi_textbook
              + years.teaching.intro.stats
              #+ as.factor(math.prereq)
              #+ TA
              # +dep_ind2
              + years.teaching.experience
              #+ as.factor(gaise.familiar)
              #+ isi.workshop
              #+ as.factor(position.classification)
              #+ as.factor(semester)
              #+ as.factor(advanced.stats.degree)
              #+ as.factor(student.type)
              # + as.factor(institution.classification)
              #+ section_ACTSAT 
              #+ section_preperc
              #+ section_ClassSize
              + new_pre_perc*instructor.gender 
              #+ new_pre_perc*as.factor(gender_pre) 
              #+  instructor.gender*as.factor(gender_pre) 
              #Interest_pre*instructor.gender
              + Difficulty_pre*instructor.gender
              + new_pre_perc*Affect_pre
              + Difficulty_post*years.teaching.experience
              
              + (1|instructor.last.name/InstructorName_Section_Semester),data=newMergedBoth )
summary(model4)

model5 = lmer(new_ach_gain ~ 1   
              + new_pre_perc +
              + gender_pre 
              + gpa_pre 
              + instructor.gender
              + years.teaching.intro.stats
              + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification
              + (1|instructor.last.name/InstructorName_Section_Semester),data=newMergedBoth )
summary(model5)

textbook.classification2 = newMergedBoth$textbook.classification
textbook.classification2 = sub("ISIfirst", "ISI", textbook.classification2)
textbook.classification2 = sub("notSBI2", "notSBI", textbook.classification2)

  
model6 = lmer(new_ach_gain ~ 1   
              + new_pre_perc +
                + gender_pre 
              + gpa_pre 
              + instructor.gender
              + years.teaching.intro.stats
              + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification2
              + (1|instructor.last.name/InstructorName_Section_Semester),data=newMergedBoth )
summary(model6)

newMergedBoth$new_gain = newMergedBoth$ach_gain*(1-newMergedBoth$pre_perc)
model7 = lmer(new_ach_gain ~ 1   
              + new_pre_perc +
                + gender_pre 
              + gpa_pre 
              + instructor.gender
              + years.teaching.intro.stats
              + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification2
              + (1|instructor.last.name/InstructorName_Section_Semester),data=newMergedBoth )
summary(model7)

model8 = lmer(new_ach_gain ~ 1   
              + new_pre_perc +
                + gender_pre 
              + gpa_pre 
              + instructor.gender
              + years.teaching.intro.stats
              + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification2
              + (1|instructor.last.name),data=newMergedBoth )
summary(model8)

gaise.familiar2 =newMergedBoth$gaise.familiar == "Completely"

model9 = lmer(new_ach_gain ~ 1   
              + new_pre_perc +
                + gender_pre 
              + gpa_pre 
             # + instructor.gender
             # + years.teaching.intro.stats
            # + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification2
            + gaise.familiar2
              + (1|instructor.last.name),data=newMergedBoth )
summary(model9)
newMergedBoth$center_pre = newMergedBoth$new_pre_perc-mean(newMergedBoth$new_pre_perc)
newMergedBoth$center_gpa = newMergedBoth$gpa_pre-mean(newMergedBoth$gpa_pre, na.rm=T)

model9.5 = lmer(new_ach_gain ~ 1   
              + center_pre +
                + gender_pre 
              +center_gpa
              # + instructor.gender
              # + years.teaching.intro.stats
              # + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification2
              #+ gaise.familiar2
              + (1|instructor.last.name),data=newMergedBoth )
summary(model9.5)
lsmeans(model9.5, "textbook.classification2")

model10 = lmer(new_ach_gain ~ 1   
              + center_pre 
                + gender_pre 
              + center_gpa
              # + instructor.gender
              # + years.teaching.intro.stats
              # + years.teaching.experience
              + incentive_classification_post2
              + textbook.classification2
              + (1|instructor.last.name),data=newMergedBoth )
summary(model10)
lsmeans(model10, "textbook.classification2")

#DC gains:
#  textbook.classification2notSBI       -0.026044   0.040967  13.400000  -0.636  0.53562 
#DS gains:
#  textbook.classification2notSBI       -0.009449   0.044097  15.900000  -0.214   0.8331  
#CI gains:
#  textbook.classification2notSBI        0.03602    0.03182 546.00000   1.132  0.25813   
#ST gains;
#  textbook.classification2notSBI       -0.09053    0.03392  20.20000  -2.669  0.01465 *  
#Sim gains
#  textbook.classification2notSBI       -0.058298   0.044241  15.000000  -1.318   0.2074 


##-----------------------Cronbach's alpha ------------------------------##
install.packages("psych")
library(psych)
#check these values

Merged=newMergedBoth
affect_pre <- data.frame(Merged$Q6.c_pre_a,Merged$Q6.d_pre_a,Merged$Q7.e_pre_a,Merged$Q7.h_pre_a,Merged$Q7.i_pre_a,Merged$Q8.h_pre_a)
affect_pre_results = alpha(affect_pre,na.rm=TRUE)
affect_post <- data.frame(Merged$Q6.c_post_a,Merged$Q6.d_post_a,Merged$Q7.e_post_a,Merged$Q7.h_post_a,Merged$Q7.i_post_a,Merged$Q8.h_post_a)
affect_post_results = alpha(affect_post,na.rm=TRUE)
affect_pre_results$total; affect_post_results$total

comp_pre <- data.frame(Merged$Q6.e_pre_a,Merged$Q7.a_pre_a,Merged$Q8.f_pre_a,Merged$Q9.a_pre_a,Merged$Q9.b_pre_a,Merged$Q9.e_pre_a)
comp_pre_results = alpha(comp_pre,na.rm=TRUE)
comp_post <- data.frame(Merged$Q6.e_post_a,Merged$Q7.a_post_a,Merged$Q8.f_post_a,Merged$Q9.a_post_a,Merged$Q9.b_post_a,Merged$Q9.e_post_a)
comp_post_results = alpha(comp_post,na.rm=TRUE)
comp_pre_results$total; comp_post_results$total

difficulty_pre <- data.frame(Merged$Q6.f_pre_a,Merged$Q6.h_pre_a,Merged$Q8.b_pre_a,Merged$Q8.d_pre_a,Merged$Q8.j_pre_a,Merged$Q9.d_pre_a,Merged$Q9.f_pre_a)
difficulty_pre_results = alpha(difficulty_pre,na.rm=TRUE)
difficulty_post <- data.frame(Merged$Q6.f_post_a,Merged$Q6.h_post_a,Merged$Q8.b_post_a,Merged$Q8.d_post_a,Merged$Q8.j_post_a,Merged$Q9.d_post_a,Merged$Q9.f_post_a)
difficulty_post_results = alpha(difficulty_post,na.rm=TRUE)
difficulty_pre_results$total; difficulty_post_results$total

effort_pre <- data.frame(Merged$Q6.a_pre_a,Merged$Q6.b_pre_a,Merged$Q7.d_pre_a,Merged$Q8.g_pre_a)
effort_pre_results = alpha(effort_pre,na.rm=TRUE)
effort_post <- data.frame(Merged$Q6.a_post_a,Merged$Q6.b_post_a,Merged$Q7.d_post_a,Merged$Q8.g_post_a)
effort_post_results = alpha(effort_post,na.rm=TRUE)
effort_pre_results$total; effort_post_results$total

interest_pre <- data.frame(Merged$Q7.b_pre_a,Merged$Q7.j_pre_a,Merged$Q8.c_pre_a,Merged$Q8.i_pre_a)
interest_pre_results = alpha(interest_pre,na.rm=TRUE)
interest_post <- data.frame(Merged$Q7.b_post_a,Merged$Q7.j_post_a,Merged$Q8.c_post_a,Merged$Q8.i_post_a)
interest_post_results = alpha(interest_post,na.rm=TRUE)
interest_pre_results$total; interest_post_results$total

value_pre <- data.frame(Merged$Q6.g_pre_a,Merged$Q6.i_pre_a,Merged$Q6.j_pre_a,Merged$Q7.c_pre_a,Merged$Q7.f_pre_a,Merged$Q7.g_pre_a,Merged$Q8.a_pre_a,Merged$Q8.e_pre_a,Merged$Q9.c_pre_a)
value_pre_results = alpha(value_pre,na.rm=TRUE)
value_post <- data.frame(Merged$Q6.g_post_a,Merged$Q6.i_post_a,Merged$Q6.j_post_a,Merged$Q7.c_post_a,Merged$Q7.f_post_a,Merged$Q7.g_post_a,Merged$Q8.a_post_a,Merged$Q8.e_post_a,Merged$Q9.c_post_a)
value_post_results = alpha(value_post,na.rm=TRUE)
value_pre_results$total; value_post_results$total



#############################################################33



